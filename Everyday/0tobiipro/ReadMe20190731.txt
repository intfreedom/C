1.1在Linux上安装和构建Pro SDK
1.1.1
https://github.com/tobiipro/prosdk-addons-c/
1.1.2
包含sdk的才需要被编译,vectormath.h,screen_based_calibration_validation.h,
这两个文件包含sdk中的文件；
1.1.3使用github上的方法，当想要使用 -ltobii_research 时出现这种报错:
cogp3@cog3:~/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731/prosdk-addons-c-master/source$ gcc -o sample ~/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731/prosdk-addons-c-master/source/sample.c -ltobii_research -ltobii_research_addons
In file included from /home/cogp3/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731/prosdk-addons-c-master/source/sample.c:4:
/home/cogp3/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731/prosdk-addons-c-master/source/screen_based_calibration_validation.h:26:10: fatal error: tobii_research.h: No such file or directory
 #include "tobii_research.h"
          ^~~~~~~~~~~~~~~~~~
compilation terminated.

注意linux中使用的反 ` `  倒引号机制：执行它所包含的内容
使用网页,http://developer.tobiipro.com/c/c-getting-started.html上的方法：
cogp3@cog3:~/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731/prosdk-addons-c-master/sdk$ gcc ../source/sample.c `pkg-config --cflags --libs tobii_research` -o sample
/usr/bin/ld: skipping incompatible /usr/local/lib/tobii_research/libtobii_research.so when searching for -ltobii_research
/usr/bin/ld: cannot find -ltobii_research
/usr/bin/ld: cannot find -lavahi-client
/usr/bin/ld: cannot find -lavahi-common
collect2: error: ld returned 1 exit status

1.1.3.1
http://developer.tobiipro.com/c/c-getting-started.html按照这个方法里的，sudo make install
To install the 64-bit tobii_research.只配置64位，就少一个报错，/usr/bin/ld: cannot find -ltobii_research
变为：cogp3@cog3:~/intfreedom/LearnC/Everyday/0tobiipro/addonsLinux20190731No32/prosdk-addons-c-master/sdk$ gcc ../source/sample.c `pkg-config --cflags --libs tobii_research` -o sample
/usr/bin/ld: cannot find -lavahi-client
/usr/bin/ld: cannot find -lavahi-common
collect2: error: ld returned 1 exit status

把sample.c改为vectormath.h,screen_based_calibration_validation.h,或者.c都不行；


1.2在Windows上安装和构建Pro SDK
下载最新版本的Tobii Pro SDK C Binding。 
该软件包包括开发与Tobii Pro眼动仪通信的应用程序所需的所有文件。 提取文件并将它们放在保存开发文件的位置。
1.1.1使用tobii_research构建
Tobii Pro SDK使用Microsoft的Windows 8.1 SDK构建。 在下面的示例中，假设tobii_research头文件安装在path-to-includes，并假定tobii_research库安装在path-to-libs。 
因此，如果您的项目包含一个使用Tobii Pro SDK的simple_project.c文件，那么可以通过键入以下内容来编译和链接：
cl simple_project.c /I path-to-includes path-to-libs \ tobii_research.lib
备注：cl命令，cl /I <dir>是把目录加入include搜录路径中
1.1.2运行使用tobii_research构建的应用程序
要使用Tobii Pro SDK运行应用程序，例如上一节中构建的simple_project，您需要添加path-to-libs作为应用程序的搜索路径。 一种方法是将path-to-libs添加到环境变量PATH。

1.3 SDK主页面：https://www.tobiipro.com/product-listing/tobii-pro-sdk/
不管任何语言的通用概念：http://developer.tobiipro.com/commonconcepts.html
对应的中文网站：https://www.tobiipro.com/zh/product-listing/tobii-pro-sdk/#%25E6%258A%2580%25E6%259C%25AF%25E8%25A7%2584%25E6%25A0%25BC
github上的示例https://github.com/tobiipro/prosdk-addons-c/

1.3.1Tobii Pro SDK
免费软件开发套件，用于构建分析应用程序，以与Tobii Pro的眼动仪配合使用。 为多种编程语言和3D引擎预制件提供多平台支持。
产品特点：
用于开发分析应用程序的综合工具包
Tobii Pro SDK是一个全面的工具包，可帮助研究人员和软件合作伙伴轻松构建用于研究的分析应用程序，使用Tobii的基于屏幕的眼动仪。 它专为开发分析注视数据的应用程序而设计。
该套件支持Tobii Pro基于屏幕的眼动仪的整个产品组合。 查看支持的眼动仪的详细信息。（Tobii Pro的以下眼动仪默认与Pro SDK兼容：Tobii Pro Nano）
一个SDK，许多应用程序
Pro SDK提供多平台支持（Windows，Linux和Mac），针对多种编程语言（.NET，Python，Matlab / Octave和C）的API绑定以及3D引擎（Unity）的预制件。 
这使得能够开发许多不同类型的分析应用 - 从用于科学研究的定制研究范例到商业应用。 Pro SDK建立在坚实的基础之上，可以在不同的平台和绑定上重用功能。


1.4Tobii Pro Eye Tracker Manager  Tobii Pro眼动仪管理器：
免费软件，帮助管理基于屏幕的眼动仪。 此应用程序有助于设置带或不带屏幕的眼动仪，它有助于用户校准和故障排除。 根据眼动仪型号，您还可以使用它来更改设置和更新固件。
概述：高效的配置和设置
Tobii Pro眼动仪管理器是一个新的配置和设置实用程序，可帮助您管理连接的眼动仪。它是免费提供的，可大大提高Tobii Pro SDK或Tobii Pro Lab用户的工作效率。
Pro Eye Tracker Manager允许研究人员在与眼睛一起使用时轻松配置眼动仪。此应用程序还用于配置场景摄像机设置中的硬件，其中物理对象用作刺激。
对于移动设备支架的用户，Tobii Pro眼动仪管理器提供了一个向导和简化的设置和配置眼动仪的过程，用于测试移动设备。
如果您的眼动仪支持不同的采样频率或眼动追踪模式，则可以使用Pro Eye Tracker Manager更改这些模式。模式适应眼动仪收集凝视数据的方式。
对于Tobii Pro Spectrum和Tobii Pro Nano，Pro Eye Tracker Manager用于更新眼动仪固件。对于其他眼动仪模型，使用眼动仪浏览器工具更新固件。
快速可靠的用户校准
Pro Eye Tracker Manager为Pro SDK用户提供了一个有效的选项，可以进行快速可靠的用户校准。 在校准之前，轨道状态面板指示参与者眼睛在轨道盒内的位置。
如果我们的技术支持团队要求，可以创建和导出诊断数据文件以进行大量故障排除。
使用Tobii Pro眼动仪管理器提高效率
Pro SDK由Pro Eye Tracker Manager补充，这是一款免费软件，可帮助您管理和设置眼动仪。
该工具支持分析眼动追踪应用程序工作流程的常用部分，该工具可以使用调用功能与Pro SDK上构建的分析应用程序无缝集成。 这包括配置显示区域，查看轨道状态（头箱的可视化）以及进行用户校准。
根据眼动仪模型，Pro Eye Tracker Manager还允许您更新固件并更改采样频率。
一个应用程序，支持许多眼动仪和平台
Pro Eye Tracker Manager可用于Tobii Pro的所有基于屏幕的眼动仪，因此相同的应用程序适用于您可能用于研究的各种模型。
该应用程序适用于Windows，Linux和Mac系统。 如果您在Mac或Linux上运行，则支持Tobii Pro X3-120需要EPU。
与您的应用程序集成
Pro Eye Tracker Manager可以使用调用功能与Pro SDK上构建的分析应用程序集成。 Pro SDK仍将为研究人员提供充分的灵活性，但眼动追踪软件应用程序的工作流程的常见部分，
例如配置显示区域，查看轨道状态（头箱的可视化）以及进行用户校准，可以是 使用此工具可轻松完成，减少所需的编码量。 这种无缝集成使研究人员能够轻松高效地创建自己的应用程序。

1.5开源附加组件
为了使Tobii Pro SDK更易于使用，一些更常见的用户场景已作为可选附件实现，可以下载或复制并在代码中使用。 
这些附加组件都是开源的，并在GitHub上托管，因此代码完整可用，任何人都可以自由地提供建议和更改。 
校准验证

在执行眼动追踪研究时，在校准后执行估计性能的验证非常有用。 此步骤通常称为校准验证。 进行校准验证的常用程序是为参与者显示一组新的刺激点，在刺激呈现期间收集凝视数据，并根据凝视数据相对于刺激点的位置计算准确度和精确度的值（ 参与者应该看看）。 
附加组件包括收集注视数据和计算性能结果所需的所有功能。 唯一留给你的是提出刺激点（这样做的方法在很大程度上取决于所使用的表示框架）。

1.5.1对于Windows
将Tobii Pro SDK存档解压缩到addons文件夹根目录中的新目录sdk。
打开Visual Studio并在win32目录中加载解决方案。
构建所需的配置（即Debug / Release和x86 / x64）。
要使用该库，您需要在源或链接中手动加载两个DLL（tobii_research_addons.dll和tobii_research.dll）与其各自的lib文件。 参见示例项目。

1.5.1.1
cl sample.c /I D:\02ability\LearnC\Everyday\0tobiipro\addons20190722\prosdk-addons-c-master\sdk\32\include D:\02ability\LearnC\Everyday\0tobiipro\addons20190722\prosdk-addons-c-master\sdk\32\lib\tobii_research.lib
还是报错；
sample.c
sample.c(1): fatal error C1083: 无法打开包括文件: “stdio.h”: No such file or directory
1.5.1.2 cl命令的作用：（备注：cl命令，cl /I <dir>是把目录加入include搜录路径中）所以是编译和链接（link)的缩写吗？
编译(compilation , compile) 1、利用编译程序从源语言编写的源程序产生目标程序的过程。 2、用编译程序产生目标程序的动作。 
动态库又称动态链接库英文为DLL，是Dynamic Link Library 的缩写形式，DLL是一个包含可由多个程序同时使用的代码和数据的库，DLL不是可执行文件
1.5.1.2.1即使切换到sample.c所在目录也不行
cl sample.c /I D:\02ability\LearnC\Everyday\0tobiipro\addons20190722\prosdk-addons-c-master\sdk\32\include D:\02ability\LearnC\Everyday\0tobiipro\addons20190722\prosdk-addons-c-master\sdk\32\lib\tobii_research.dll
1.5.1.3
用VS 2017的开发人员命令提示符，打开，少了fatal error C1083: 无法打开包括文件: “stdio.h”: No such file or directory这个报错；
出现：cl: 命令行 warning D9024 :无法识别的源文件类型“D:\02ability\LearnC\Everyday\0tobiipro\addons20190722\prosdk-addons-c-master\sdk\32\lib\tobii_research.dll”， 假定为对象文件


1.5.1.4
以上错把tobii_resrearch.lib,文件写为dll，修改为tobii_resrearch.lib之后出现的报错：sample.exe : fatal error LNK1120: 7 个无法解析的外部命令；

1.5.1.5
把tobii_research_addons属性页，项目默认值---配置类型 改为（应用程序(.exe))，这个报错：不是有效的Win32应用程序；消失；

Visual Studio开发中引用第三方的库时，可能会遇到Error LNK 2019，这是由于库引用不正确导致的。本文针对引用.h 头文件和.lib库文件遇到error LNK2019 的情况。

这样设置后会改变一些东西；但是还是不成功；明天换linux试试；
第一步，添加.h到项目的包含目录。
右键点击开发项目->属性->VC++目录->包含目录， 将.h文件所在目录添加到包含目录最后，目录之间用';' 分隔。

第二步，添加lib到项目的库目录。
库目录同包含目录在同一个界面中，操作同第一步相同。

第三步，添加lib到附加依赖项。
第二步的操作只是告诉项目在需要依赖的库在哪些目录中，但并没有告知项目需要依赖的库。和包含目录不同的是，包含目录的引用是通过include实现的，库目录依赖配置实现的。

同样在项目的属性页中，链接器->输入->附加依赖项，把依赖lib的文件名加到最后。

1.5.1.6
按照这个https://blog.csdn.net/qq_34097715/article/details/79540933里方法有进步；但还是出现
不是有效的Win32应用程序；

1.5.1.7
把项目属性--项目默认值--配置类型，设置为应用程序(.exe)  报错：无法解析的外部符号 _WinMain@16，
该符号在函数 "int __cdecl invoke_main(void)" (?invoke_main@@YAHXZ) 中被引用tobii_research_addons  
D:\02ability\LearnC\Everyday\0tobiipro\addonsLinux20190731\prosdk-addons-c-master\win32\MSVCRTD.lib(exe_winmain.obj)	1	

1.5.1.8  无法解析的外部符号 _WinMain@16。。。。。。。。
在左边栏中依次选择：Configuration Properties->C/C++->Preprocessor,然后在右边栏的Preprocessor Definitions对应的项中删除_WINDOWS, 添加_CONSOLE.
使用上述这种方法，还是不行；
把这个替换出去_WINDOWS    _CONSOLE这两个换来换去，报错依旧：
为何sample里会又一个tobii_research_addons.lib，去掉之后，错误更多；想着添加 一个sample.lib

修改为_CONSOLE后，
报错状态变为LNK2019  无法解析的外部符号 _main，该符号在函数 "int __cdecl invoke_main(void)" (?invoke_main@@YAHXZ) 中被引用	tobii_research_addons	
D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master\win32\MSVCRTD.lib(exe_main.obj)	1

1.5.2
注意到一个问题，为何有好几个.h文件，只有一个对应的.lib文件；是不是把另外几个都编译下；sdk中的源文件，应该没有问题；
还有再必应中，用这个作为关键词搜索，MSVCRTD.lib(exe_main.obj)

或者再github中问问，开发者；或者使用谷歌搜索下；

1.5.3综合一下，问题还是出在cl命令这里；
cl sample.c /I D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master\sdk\32\include D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master\sdk\32\lib\tobii_research.lib
/out:sample.exe
sample.obj
D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master\sdk\32\lib\tobii_research.lib
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_init_default，该符号在函数 _main 中被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_destroy，该符号在函数 _main 中被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_enter_validation_mode，该符号在函数 _main 中 被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_start_collecting_data，该符号在函数 _main 中 被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_compute，该符号在函数 _main 中被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_destroy_result，该符号在函数 _main 中被引用
sample.obj : error LNK2019: 无法解析的外部符号 __imp__tobii_research_screen_based_calibration_validation_is_collecting_data，该符号在函数 _main 中被引用
sample.exe : fatal error LNK1120: 7 个无法解析的外部命令

似乎比以前有进步；

1.5.4
把所有的放进x64试一试；
For Windows

    Unzip the Tobii Pro SDK archive to a new directory sdk in root of the addons folder.
    Open Visual Studio and load the solution in the win32 directory.
    Build for the desired configuration (i.e. Debug/Release and x86/x64).
    到这里，选择Debug x64没有报错；
尝试手动加载：
要使用该库，您需要在源或链接中手动加载两个DLL（tobii_research_addons.dll和tobii_research.dll）与其各自的lib文件。 参见示例项目。

运行这一步后，反而出现
无法启动程序   .dll不是有效的Win32应用程序；

重新生成解决方案成功，但本地Windows调试器不可用；

加了这两句也不行；getchar();
	system("pause");
默认的，配置属性-链接器-系统-子系统----sample属性页里是控制台 _CONSOLE，而tobii_research_addons里为_WINDOWS
先修改过来试试；

1.5.5，目前是修改了，把sample作为启动项目；

现在可以出来；
Usage: sample <eyetracker address>
Couldn't find eyetracker with address (null)!

D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master-x64\win32\\Output\x64\Debug\sample.exe (进程 3696)已退出，返回代码为: 1。
若要在调试停止时自动关闭控制台，请启用“工具”->“选项”->“调试”->“调试停止时自动关闭控制台”。
按任意键关闭此窗口...

1.5.5.1目前做的改变记录下来；
按照步骤Unzip the Tobii Pro SDK archive to a new directory sdk in root of the addons folder.
    Open Visual Studio and load the solution in the win32 directory.
然后选择Debug x64,并生成解决方案，没有报错；

属性->VC++目录->包含目录，库目录，修改下；两个项目都修改了
配置属性-链接器-系统-子系统----两个项目属性页里都是控制台 _CONSOLE
C/C++ ---- 预处理器里都是控制台 _CONSOLE
项目属性--项目默认值--配置类型，设置为应用程序(.exe)，sample的为.exe；把tobii_research_addons属性页，对应的设置为.dll和.exe均可；

总结一下：
一，关键就是开发人员可能选择一个新的Win32应用程序项目，但创建的入口点函数是main,生成应用程序时，会报告一个链接器错误；
把配置属性-链接器-系统-子系统中改为，/SUBSYSTEM:CONSOLE
二，会报告无法启动程序   .dll不是有效的Win32应用程序，这个错误，一个原因是没有选择合适的启动项目，应把生成.exe的项目的作为启动项目；
也就是把sample作为启动项目；
三，选择Debug x64，可能和计算机系统有关；然后手动加载.lib以及.dll文件到属性->VC++目录->包含目录，库目录

1.5.6
Usage: sample <eyetracker address>
Couldn't find eyetracker with address (null)!
D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master-x64\win32\\Output\x64\Debug\sample.exe (进程 19164)已退出 ，返回代码为: 1。
若要在调试停止时自动关闭控制台，请启用“工具”->“选项”->“调试”->“调试停止时自动关闭控制台”。
按任意键关闭此窗口...
以为要在sdk的机器上运行；

研究以下页面；C - SDK reference guide call_eyetracker_manager_windows.c
http://developer.tobiipro.com/c/c-sdk-reference-guide.html
研究如何连接到tobii上http://developer.tobiipro.com/c/c-oldmigrationsdk.html；

1.6.1
现在可以打开了，但无法find eyetracker
研究sample.c
int main(int argc, char *argv[])这里，argc为命令行输入时的参数个数，argv[]是argc个参数，其中第0个参数是程序的全名，以后的参数。命令行后面跟的用户输入的参数。


切换到生成sample.exe的目录，执行会出现
D:\02ability\LearnC\Everyday\0tobiipro\prosdk-addons-c-master-x64\win32\Output\x64\Debug>sample.exe
Usage: sample <eyetracker address>
Couldn't find eyetracker with address (null)!

这里argc[0]是sample.exe，argc[1]应该为eyetracker address，可以试试eye tracker manager的安装的地址；

C:\Users\pc\AppData\Local\TobiiProEyeTrackerManager\Update.exe --processStart "TobiiProEyeTrackerManager.exe"
C:\Users\pc\AppData\Local\TobiiProEyeTrackerManager\Update.exe