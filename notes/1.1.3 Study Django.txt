1. Django创建项目
1.1 在创建目录下，django-admin startproject project
1.2 配置数据库
1.2.1 启动数据库服务：net start mysql80    #80为数据库版本，启动时以管理员身份运行cmd
1.2.2 打开数据库：mysql -u root -p
1.2.3 在.project/project/settings.py里配置数据库
1.3 配置应用
1.3.1 cmd中切换到工作目录，.project，python manage.py startapp myApp    #myApp为应用名，可修改
1.3.2 在.project/project/settings.py里INSTALLED_APPS中激活myApp应用
1.4 定义模型
1.4.1 在.project/myApp/models.py中定义模型，数据库中的一张表就对应一个模型
1.5 在数据库中生成数据表
1.5.1 生成迁移文件，在cmd中.project目录下执行：python manage.py makemigrations    #在migrations目录下生成迁移文件，此时数据库无表
1.5.2 执行迁移文件，python manage.py migrate    #相当于执行mysql语句创建数据表
1.5.3 测试数据操作
1.5.3.1 进入到python shell，执行python manage.py shell
1.5.3.2 引入包，from myApp.models import Grades, Students    #之前创建的
                from django.utils  import timezone
                from datetime import *
1.5.3.3 添加数据，本质：创建一个模型类的对象实例
1.5.3.4 查看某个对象，类名：objects.get(pk=2)，Grades.objects.get(pk=2)
1.5.3.5 修改数据，属性=新值，grade2.gboynum = 20
                             grade2.save()
1.5.3.6 删除数据
1.5.3.7 关联数据
1.6 启动服务器
1.6.1 在cmd的.project目录下：python manage.py runserver ip:port，IP可以不写，默认是本机IP，端口默认8000
1.6.2 这是一个纯python写的轻量级web服务器，仅仅开发测试用
1.7 Admin站点管理：
1.7.1 内容发布，公告访问
1.7.2 配置Admin应用，在settings.py的INSTALLED_APPS中添加 django.contrib.admin
1.7.3 创建管理员用户,在cmd的.project目录下：python manage.py createsuperuser
1.7.4 汉化，修改settings.py LANGUAGE_CODE='zh-Hans'
1.7.5 自定义管理页面（学到301集，忘记管理员账户）